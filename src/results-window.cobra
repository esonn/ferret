@args -pkg:gtk-sharp-2.0

use Gtk

class ResultsWindow inherits Window
	var _task as Documents
	var _resultsModel as ListStore
	var _commentLabel as Label

	cue init(task)
		base.init('Ferret: Table of comparisons')
		_task = task
		listen .deleteEvent, do(obj, e as DeleteEventArgs)
			Application.quit
		.createWidgets
		.fillTable
		.setDefaultSize(500, 400)
		.setComment('Finished comparisons')

	def fillTable
		for i in 0 : _task.numDocuments-1
			for j in i+1 : _task.numDocuments
				_resultsModel.appendValues(
					_task.docName(i), 
					_task.docName(j), 
					_task.computeResemblance(i, j).toString('0.0000')
				)

	def setComment(msg)
		_commentLabel.text = msg

	def createWidgets
		# -- three column tree view for results
		resultsList = TreeView()
		_resultsModel = ListStore(String.getType, String.getType, String.getType)
		resultsList.model = _resultsModel
		resultsList.appendColumn('Document 1', CellRendererText(), "text", 0)
		resultsList.appendColumn('Document 2', CellRendererText(), "text", 1)
		resultsList.appendColumn('Similarity', CellRendererText(), "text", 2)
		resultsListScrolled = ScrolledWindow()
		resultsListScrolled.add(resultsList)
		resultsListScrolled.shadowType = ShadowType.In

		# -- buttons for managing results
		saveReportButton = Button('Save report ...')
		saveReportButton.sensitive = false
		sortDocument1Button = Button('Document 1')
		sortDocument1Button.sensitive = false
		sortDocument2Button = Button('Document 2')
		sortDocument2Button.sensitive = false
		sortSimilarityButton = Button('Similarity')
		sortSimilarityButton.sensitive = false
		showAnalysisButton = Button('Show analysis')
		showAnalysisButton.sensitive = false
		saveAnalysisButton = Button('Save analysis ...')
		saveAnalysisButton.sensitive = false
		helpButton = Button(Stock.help)
		quitButton = Button(Stock.quit)

		# -- attach the actions
		listen helpButton.clicked, do(sender, args as EventArgs)
			HelpWindow.showResults
		listen quitButton.clicked, do(sender, args as EventArgs)
			Application.quit

		# -- labels for data
		_commentLabel = Label('Last action ...')
		_commentLabel.setAlignment(0.0_f32, 0.5_f32)
		numDocumentsLabel = Label('Documents: [_task.numDocuments]')
		numPairsLabel = Label('Pairs: [_task.numPairs]')

		# -- set up display
		mainPanel = HBox(false, 5)
		mainPanel.packStart(resultsListScrolled, true, true, 0)

		buttonPanel = VBox(false, 5)
		buttonPanel.borderWidth = 5 
		buttonPanel.packStart(saveReportButton, false, false, 0)

		sortingFrame = Frame('Rearrange table by')
		sortingFrameBox = VBox(true, 5)
		sortingFrameBox.borderWidth = 5
		sortingFrameBox.packStart(sortDocument1Button, false, false, 0)
		sortingFrameBox.packStart(sortDocument2Button, false, false, 0)
		sortingFrameBox.packStart(sortSimilarityButton, false, false, 0)
		sortingFrame.add(sortingFrameBox)
		buttonPanel.packStart(sortingFrame, false, false, 0)

		analysisFrame = Frame('For selected pair')
		analysisFrameBox = VBox(true, 5)
		analysisFrameBox.borderWidth = 5
		analysisFrameBox.packStart(showAnalysisButton, false, false, 0)
		analysisFrameBox.packStart(saveAnalysisButton, false, false, 0)
		analysisFrame.add(analysisFrameBox)
		buttonPanel.packStart(analysisFrame, false, false, 0)

		buttonPanel.packEnd(quitButton, false, false, 0)
		buttonPanel.packEnd(helpButton, false, false, 0)
		mainPanel.packEnd(buttonPanel, false, false, 0)

		labelPanel = HBox(false, 0)
		labelPanel.packStart(_commentLabel, true, true, 5)
		labelPanel.packStart(numDocumentsLabel, true, true, 0)
		labelPanel.packStart(numPairsLabel, true, true, 5)

		panel = VBox(false, 0)
		panel.packStart(mainPanel, true, true, 0)
		panel.packStart(HSeparator(), false, false, 0)
		panel.packStart(labelPanel, false, false, 0)

		.add(panel)
