# Manage a single document

use System.Text.RegularExpressions

class Document
	var _filepath as String
	get filepath from _filepath as String

	var _reference as int
	get reference from _reference as int

	var _trigramCount as int
	get trigramCount from _trigramCount as int

	cue init(filepath, reference)
		base.init
		_filepath = filepath
		_reference = reference

	def readTrigrams as Set<of List<of String>>
		tokens = List<of String>()
		result = Set<of List<of String>>()

		try 
			using file = StreamReader(_filepath)
				line = file.readLine
				while line
					for token in Regex.split(line, r"\W+")
						if token.length > 0 # ignore tokens with no characters
							tokens.add(token)
					# -- move to next line
					line = file.readLine

		catch ioe as IOException
			print 'IO Error [ioe] with reading [_filepath]'
			return result

		# convert tokens into trigrams, and return
		for i in 0:tokens.count-2
			result.add([tokens[i], tokens[i+1], tokens[i+2]])
		_trigramCount = result.count

		return result

	# Return the filename part of document filepath
	# -- TODO: ensure a string is returned, not string?
	def filename as String?
		result = Path.getFileName(_filepath)
		if result == nil
			return ""
		else
			return result
